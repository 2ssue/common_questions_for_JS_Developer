(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{388:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript에서-expression과-statement는-어떤-차이가-있을까요"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript에서-expression과-statement는-어떤-차이가-있을까요"}},[t._v("#")]),t._v(" JavaScript에서 expression과 statement는 어떤 차이가 있을까요?")]),t._v(" "),a("blockquote",[a("p",[t._v("This is a translation of 30-Seconds-of-knowledge's "),a("a",{attrs:{href:"https://github.com/30-seconds/30-seconds-of-interviews/blob/master/questions/expression-vs-statement.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is the difference between an expression and a statement in JavaScript?"),a("OutboundLink")],1),t._v(" in korean.")])]),t._v(" "),a("p",[t._v("자바스크립트에는 expression과 statement라는 두가지 주요 구문 카테고리가 있다. 세번째는 이 둘을 합친 것으로, expression statement라고 일컫는다. 간단하게 요약해보자면 아래와 같다:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Expression")]),t._v(": 값을 생성한다.")]),t._v(" "),a("li",[a("strong",[t._v("Statement")]),t._v(": action을 수행한다.")]),t._v(" "),a("li",[a("strong",[t._v("EXpression statement")]),t._v(": 값을 생성하고 action을 수행한다.")])]),t._v(" "),a("p",[t._v("일반적으로 아래와 같이 용어를 정의한다:")]),t._v(" "),a("blockquote",[a("p",[t._v("만약 변수에 값을 할당하거나 그 값을 출력할 수 있다면 expression이고, 그렇지 않다면 statement이다.")])]),t._v(" "),a("h3",{attrs:{id:"statements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statements"}},[t._v("#")]),t._v(" Statements")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("declaration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Statement는 어떤 동작을 하는 명령을 나타내고, 값을 생성하지는 않는다.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("위의 코드에서 Expression은 "),a("code",[t._v("y >= 0")]),t._v(" 하나로, "),a("code",[t._v("true")]),t._v("나 "),a("code",[t._v("false")]),t._v(" 값을 생성한다. 이 외의 코드는 새로운 값을 생성하지 않는다.")]),t._v(" "),a("h3",{attrs:{id:"expressions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expressions"}},[t._v("#")]),t._v(" Expressions")]),t._v(" "),a("p",[t._v("Expression은 값을 생성한다. 인터프리터가 계산된 결과로 대체하여 값을 전달하기 때문에 값이 함수로 전달될 수 있다.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// > 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastCharacter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// > "t"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// > true")]),t._v("\n")])])]),a("h3",{attrs:{id:"expression-statements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expression-statements"}},[t._v("#")]),t._v(" Expression statements")]),t._v(" "),a("p",[t._v("아래는 삼항 연산자 Expression을 사용해 이전에 사용했던 "),a("a",{attrs:{href:"#statements"}},[t._v("Statements 파트")]),t._v("의 두번째 예시 코드와 동일한 역할을 하는 코드이다:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `y`의 절댓값을 `x`에 할당")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y\n")])])]),a("p",[t._v("이는 변수 "),a("code",[t._v("x")]),t._v("를 평가(Expression)하여 선언(Statement)하기 때문에 Expression이기도 하고 Statement이기도 하다.")]),t._v(" "),a("h2",{attrs:{id:"알아두면-좋은-것"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#알아두면-좋은-것"}},[t._v("#")]),t._v(" 알아두면 좋은 것")]),t._v(" "),a("ul",[a("li",[t._v("함수 선언식(Declaration) vs 함수 표현식(Expression)")])]),t._v(" "),a("h2",{attrs:{id:"참고-링크"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#참고-링크"}},[t._v("#")]),t._v(" 참고 링크")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://stackoverflow.com/questions/12703214/javascript-difference-between-a-statement-and-an-expression",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is the difference between a statement and an expression?"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"additional-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#additional-description"}},[t._v("#")]),t._v(" Additional Description")]),t._v(" "),a("h3",{attrs:{id:"함수-선언식"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수-선언식"}},[t._v("#")]),t._v(" 함수 선언식")]),t._v(" "),a("p",[t._v("다른 프로그래밍 언어에서도 사용하는 일반적인 함수식")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do something...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"함수-표현식"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수-표현식"}},[t._v("#")]),t._v(" 함수 표현식")]),t._v(" "),a("p",[t._v("자바스크립트에서 사용할 수 있는 또다른 함수 선언 방법")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do something...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("함수 선언식은 호이스팅에 영향을 받아서 선언 전에 사용할 수 있지만, 함수 표현식은 호이스팅에 영향을 받지 않아서 선언하기 전에 사용할 수 없다. 자세한 내용은 "),a("RouterLink",{attrs:{to:"/docs/Javascript/hoisting.html"}},[t._v("호이스팅")]),t._v("을 참고하면 좋다.")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);